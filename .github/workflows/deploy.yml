name: Terraform CI/CD (Apply and Destroy)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Choose the action to perform (apply/destroy)"
        required: true
        default: "apply"
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: "Terraform and Deploy"
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-south-1" # Specify your AWS region
      TF_VERSION: "1.9.8" # Specify your desired Terraform version

    steps:
      # Checkout GitHub repository
      - name: "Checkout GitHub repository"
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Verify AWS credentials
      - name: "Verify AWS CLI"
        run: aws sts get-caller-identity

      # Set up Terraform
      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Initialize Terraform
      - name: "Terraform Init"
        run: terraform init

      # Validate Terraform files
      - name: "Terraform Validate"
        run: terraform validate

      # Choose between Apply or Destroy
      - name: "Run Terraform Action"
        env:
          TF_VAR_docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          TF_VAR_docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
          # Capture the input action and ensure a default value
          ACTION="${{ github.event.inputs.action || 'apply' }}"

          # Debugging: Show the action being run
          echo "Action selected: $ACTION"

          # Check the action and execute accordingly
          if [[ "$ACTION" == "apply" ]]; then
            echo "Running Terraform Apply..."
            terraform plan -out=tfplan
            terraform apply -auto-approve tfplan
          elif [[ "$ACTION" == "destroy" ]]; then
            echo "Running Terraform Destroy..."
            terraform destroy -auto-approve
          else
            echo "Invalid action specified: $ACTION"
            exit 1
          fi
